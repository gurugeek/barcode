#!/usr/bin/perl
# Generate code39 barcodes with unicode characters.
# This doesn't really have a purpose.
# https://trmm.net/Barcode
use warnings;
use strict;

my %map = (
	'*' => '1 1001',
	'A' => '011 10',
	'B' => '101 10',
	'C' => '001 11',
	'D' => '110 10',
	'E' => '010 11',
	'F' => '100 11',
	'G' => '111 00',
	'H' => '011 01',
	'I' => '101 01',
	'J' => '110 01',
	'K' => '0111 0',
	'L' => '1011 0',
	'M' => '0011 1',
	'N' => '1101 0',
	'O' => '0101 1',
	'P' => '1001 1',
	'Q' => '1110 0',
	'R' => '0110 1',
	'S' => '1010 1',
	'T' => '1100 1',
	'U' => '0 1110',
	'V' => '1 0110',
	'W' => '0 0111',
	'X' => '1 1010',
	'Y' => '0 1011',
	'Z' => '1 0011',
	'.' => '0 1101',
	'-' => '1 1100',
	' ' => '1 0101',
	'0' => '11 001',
	'1' => '01 110',
	'2' => '10 110',
	'3' => '00 111',
	'4' => '11 010',
	'5' => '01 011',
	'6' => '10 011',
	'7' => '11 100',
	'8' => '01 101',
	'9' => '10 101',
);

my %bits = (
	0	=> '█',
	1	=> '│',
	' '	=> '  ',
);

sub code39
{
	my $s = shift;
	my $r = '';

	my $last = '';
	for(split //, $s)
	{
		my $bits = $map{$_}
			or die "$_: unknown symbol?\n";

		for my $bit (split //, $bits)
		{
			$r .= ' ' if $bit eq '0' and $last eq '0';
			if (1)
			{
				$r .= $bits{$bit};
			} else {
				$r .= ' ' if $bit eq ' ';
				$r .= $bit;
			}

			$last = $bit;
		}
	}

	return $r;
}

my $text = shift || 'AAAAA';
print code39("*$text*"), "\n";
